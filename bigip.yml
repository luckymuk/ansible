---
- name: Configure F5 BigIP vms
  hosts: localhost
  gather_facts: false
  vars:
    # this property will be known after f5 k8s yaml files are executed. this value is a preliminary value.    
    traffic_floating_ip: '209.29.242.112/24'
    oam_floating_ip: '216.198.152.215/24'
    external_floating_ip: '172.21.186.13/24'
    vms:
      - hostname: f5-bigip-sdf-pp-01.teluslabs.net
        ha_ip: ''
        traffic_ip: '209.29.242.110/24'
        oam_ip: '216.198.152.213/24'
        external_ip: '172.21.186.11/24'
        license: 
        provider:
          server: 172.21.206.41
          user: admin
          validate_certs: no
          server_port: 443
          password: TELUS2021
      - hostname: f5-bigip-sdf-pp-02.teluslabs.net
        ha_ip: ''
        traffic_ip: '209.29.242.111/24'
        oam_ip: '216.198.152.214/24'
        external_ip: '172.21.186.12/24'
        license: GMTYM-XNTLU-WEXRV-ZCRYC-RPRWVTN
        provider: 
          server: 172.21.206.42
          user: admin
          validate_certs: no
          server_port: 443
          password: TELUS2021

  tasks:        
  - name: License BIG-IP using a key
    bigip_device_license:
      accept_eula: yes
      license_key: "{{ item['license'] }}"
      provider: "{{ item.provider }}"
    loop: "{{ vms }}"
    delegate_to: localhost

  - name: Set the hostname of the BIG-IP
    bigip_hostname:
      hostname: "{{ item.hostname }}"
      provider: "{{ item.provider }}"
    loop: "{{ vms }}"
     
  - name: Set NTP server
    bigip_device_ntp:
      ntp_servers:
        - 209.20.8.253 
        - 209.20.8.254
      provider: "{{ item.provider }}"
    loop: "{{ vms }}"
  
  - name: Set timezone
    bigip_device_ntp:
      timezone: America/Toronto
      provider: "{{ item.provider }}"
    loop: "{{ vms }}"
  
  - name: Set the DNS settings on the BIG-IP
    bigip_device_dns:
      name_servers:
        - 209.20.8.249
        - 205.206.214.249
      search:
        - localdomain
        - lab.local
      provider: "{{ item.provider }}"
    loop: "{{ vms }}"

  - name: disable GUI wizard for the first logon
    bigip_sys_global:
      gui_setup: no
      provider: "{{ item.provider }}"
    loop: "{{ vms }}"

  - name: Create untagged VLAN's for VM-01
    bigip_vlan:
      name: "{{ item.name }}"
      untagged_interfaces: "{{ item.interface }}"
      provider: "{{ vms[0].provider }}"
    loop:
      - { name: 'traffic_vlan_961', interface: '1.1'}
      - { name: 'oam_vlan_960', interface: '1.2'}
      - { name: 'external_vlan_3010', interface: '1.3'}
      - { name: 'ha_vlan', interface: '1.4'}
    delegate_to: localhost

  - name: Create untagged VLAN's for VM-02
    bigip_vlan:
      name: "{{ item.name }}"
      untagged_interfaces: "{{ item.interface }}"
      provider: "{{ vms[1].provider }}"
    loop:
      - { name: 'traffic_vlan_961', interface: '1.1'}
      - { name: 'oam_vlan_960', interface: '1.2'}
      - { name: 'external_vlan_3010', interface: '1.3'}
      - { name: 'ha_vlan', interface: '1.4'}
    delegate_to: localhost
    
  - name: Create Self IP for VM-01
    bigip_selfip:
      address: "{{ item.address }}"
      name: "{{ item.name }}"
      netmask: "{{ item.netmask }}"
      vlan: "{{ item.vlan }}"
      provider: "{{ vms[0].provider }}"
    loop:
      - { address: "{{ vms[0].ha_ip | ipaddr('address') }}", name: "{{ vms[0].ha_ip }}", netmask: "{{ vms[0].ha_ip | ipaddr('prefix') }}", vlan: 'ha_vlan'}
      - { address: "{{ vms[0].traffic_ip | ipaddr('address') }}", name: "{{ vms[0].traffic_ip }}", netmask: "{{ vms[0].traffic_ip | ipaddr('prefix') }}", vlan: 'traffic_vlan_961'}
      - { address: "{{ vms[0].oam_ip | ipaddr('address') }}", name: "{{ vms[0].oam_ip }}", netmask: "{{ vms[0].oam_ip | ipaddr('prefix') }}", vlan: 'oam_vlan_960'}
      - { address: "{{ vms[0].external_ip | ipaddr('address') }}", name: "{{ vms[0].external_ip }}", netmask: "{{ vms[0].external_ip | ipaddr('prefix') }}", vlan: 'external_vlan_3010'}
  
  - name: Create Self IP for VM-02
    bigip_selfip:
      address: "{{ item.address }}"
      name: "{{ item.name }}"
      netmask: "{{ item.netmask }}"
      vlan: "{{ item.vlan }}"
      provider: "{{ vms[1].provider }}"
    loop:
      - { address: "{{ vms[1].ha_ip | ipaddr('address') }}", name: "{{ vms[1].ha_ip }}", netmask: "{{ vms[1].ha_ip | ipaddr('prefix') }}", vlan: 'HA_VLAN'}
      - { address: "{{ vms[1].traffic_ip | ipaddr('address') }}", name: "{{ vms[1].traffic_ip }}", netmask: "{{ vms[1].traffic_ip | ipaddr('prefix') }}", vlan: 'traffic_vlan_961'}
      - { address: "{{ vms[1].oam_ip | ipaddr('address') }}", name: "{{ vms[1].oam_ip }}", netmask: "{{ vms[1].oam_ip | ipaddr('prefix') }}", vlan: 'oam_vlan_960'}
      - { address: "{{ vms[1].external_ip | ipaddr('address') }}", name: "{{ vms[1].external_ip }}", netmask: "{{ vms[1].external_ip | ipaddr('prefix') }}", vlan: 'external_vlan_3010'}

       
  - name: Configure device connectivity for standard HA pair
    bigip_device_connectivity:
      config_sync_ip: "{{ item.ha_ip | ipaddr('address') }}"
      mirror_primary_address: "{{ item.ha_ip | ipaddr('address')}}"
      unicast_failover:
        - address: "{{ item.provider.server }}"
        - address: "{{ item.ha_ip | ipaddr('address') }}"
      provider: "{{ item.provider }}"
    loop: "{{ vms }}"
  
  - name: Create a sync-only device group
    bigip_device_group:
      name: f5-bigip-sdf
      full_sync: yes
      provider: "{{ item.provider }}"
    loop: "{{ vms }}"
  
  - name: Add trusts for all peer devices to Active device
    bigip_device_trust:
      peer_server: "{{ vms[1].provider.server }}"
      peer_user: "{{ vms[1].provider.user }}"
      peer_password: "{{ vms[1].provider.password }}"
      provider: "{{ vms[0].provider }}"

  - name: Create Floating Self IPs
    bigip_selfip:
      address: "{{ item.address }}"
      name: "{{ item.name }}"
      netmask: "{{ item.netmask }}"
      vlan: "{{ item.vlan }}"
      provider: "{{ vms[0].provider }}"
      traffic_group: "traffic-group-1"
    loop:
      - { address: "{{ traffic_floating_ip | ipaddr('address') }}", name: "{{ traffic_floating_ip }}", netmask: "{{ traffic_floating_ip | ipaddr('prefix') }}", vlan: 'traffic_vlan_961'}
      - { address: "{{ oam_floating_ip | ipaddr('address') }}", name: "{{ oam_floating_ip }}", netmask: "{{ oam_floating_ip | ipaddr('prefix') }}", vlan: 'oam_vlan_960'}
      - { address: "{{ external_floating_ip | ipaddr('address') }}", name: "{{ external_floating_ip }}", netmask: "{{ external_floating_ip | ipaddr('prefix') }}", vlan: 'external_vlan_3010'}

  - name: Perform an initial sync of a device to a new device group
    bigip_configsync_action:
      device_group: F5-BIGIP-CIS-5G
      sync_device_to_group: yes
      provider: "{{ item.provider }}"
    loop: "{{ vms }}"

  - name: Perform an final sync of the two BIGIP VM's
    bigip_configsync_action:
      device_group: F5-BIGIP-CIS-5G
      sync_most_recent_to_device: yes
      provider: "{{ item.provider }}"
    loop: "{{ vms }}"
    